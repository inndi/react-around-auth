{"ast":null,"code":"import _classCallCheck from\"/home/secret/Desktop/inna/dev/first-project/around-react-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/home/secret/Desktop/inna/dev/first-project/around-react-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(fetchData){_classCallCheck(this,Api);this._baseUrl=fetchData.baseUrl;this._headers=fetchData.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"Error: \".concat(res.status));}},{key:\"getInitialCards\",value:function getInitialCards(){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"getUserInfo\",value:function getUserInfo(){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{headers:this._headers}).then(this._checkResponse);}},{key:\"delete\",value:function _delete(cardId){return fetch(\"\".concat(this._baseUrl,\"/cards/\").concat(cardId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}},{key:\"postNewCardData\",value:function postNewCardData(card){return fetch(\"\".concat(this._baseUrl,\"/cards\"),{method:'POST',headers:this._headers,body:JSON.stringify({name:card.name,link:card.link})}).then(this._checkResponse);}},{key:\"patchProfileData\",value:function patchProfileData(editFields){return fetch(\"\".concat(this._baseUrl,\"/users/me\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({name:editFields.name,about:editFields.about})}).then(this._checkResponse);}},{key:\"patchAvatar\",value:function patchAvatar(fieldValue){return fetch(\"\".concat(this._baseUrl,\"/users/me/avatar\"),{method:'PATCH',headers:this._headers,body:JSON.stringify({avatar:fieldValue.avatar})}).then(this._checkResponse);}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(itemId,isLiked){if(isLiked){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(itemId),{method:'DELETE',headers:this._headers}).then(this._checkResponse);}else if(!isLiked){return fetch(\"\".concat(this._baseUrl,\"/cards/likes/\").concat(itemId),{method:'PUT',headers:this._headers}).then(this._checkResponse);}}}]);return Api;}();var api=new Api({baseUrl:\"https://around.nomoreparties.co/v1/group-12\",headers:{authorization:\"2f92e6f8-d3bf-4f0b-b7c9-ecb844a65d7b\",\"Content-Type\":\"application/json\"}});export default api;","map":{"version":3,"sources":["/home/secret/Desktop/inna/dev/first-project/around-react-auth/src/utils/api.js"],"names":["Api","fetchData","_baseUrl","baseUrl","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_checkResponse","cardId","method","card","body","JSON","stringify","name","link","editFields","about","fieldValue","avatar","itemId","isLiked","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(fetchData) {\n    this._baseUrl = fetchData.baseUrl;\n    this._headers = fetchData.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Error: ${res.status}`);\n  }\n\n  getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  delete(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n      .then(this._checkResponse);\n  }\n\n  postNewCardData(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  patchProfileData(editFields) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: editFields.name,\n        about: editFields.about\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  patchAvatar(fieldValue) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: fieldValue.avatar,\n      })\n    })\n      .then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(itemId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\n        method: 'DELETE',\n        headers: this._headers\n      })\n        .then(this._checkResponse);\n    } else if (!isLiked) {\n      return fetch(`${this._baseUrl}/cards/likes/${itemId}`, {\n        method: 'PUT',\n        headers: this._headers\n      })\n        .then(this._checkResponse);\n    }\n  }\n}\n\nconst api = new Api({\n  baseUrl: \"https://around.nomoreparties.co/v1/group-12\",\n  headers: {\n    authorization: \"2f92e6f8-d3bf-4f0b-b7c9-ecb844a65d7b\",\n    \"Content-Type\": \"application/json\"\n  }\n});\n\nexport default api;"]},"metadata":{},"sourceType":"module"}